- id: motion_sensor_turns_on_light
  alias: Motion sensor turns on light
  trigger:
    platform: numeric_state
    entity_id: sensor.entrysensor_burglar
    above: '0'
  action:
    service: homeassistant.turn_on
    data:
      entity_id: light.entry_level
- id: motion_sensor_turns_off_light
  alias: Motion sensor turns off light
  trigger:
  - entity_id: sensor.entrysensor_burglar
    for:
      minutes: 1
    platform: state
    to: '0'
  action:
  - data:
      entity_id: light.entry_level
    service: homeassistant.turn_off
- id: door_sensor_turns_on_light
  alias: Door sensor turns on light
  trigger:
  - above: '100'
    entity_id: sensor.entrysensor_burglar
    platform: numeric_state
  action: []
- id: turn_off_bedside_light_after_15_minutes
  alias: Turn off bedside light after 15 minutes
  trigger:
  - entity_id: light.bedside_light
    platform: state
    to: 'on'
    for:
      minutes: 30
  action:
  - data:
      entity_id: light.bedside_light
    service: light.turn_off
  condition:
  - after: '22:00:00'
    before: '20:00:00'
    condition: time
- id: turn_off_reading_light
  alias: Turn off Reading Light after 5 seconds
  initial_state: false
  condition:
  - condition: numeric_state
    entity_id: light.reading_light
    value_template: '{{state.attributes.brightness}}'
    above: 0
  trigger:
    platform: time_pattern
    seconds: /5
  action:
    service: light.turn_off
    data:
      entity_id: light.reading_light
- id: auto_renew_ssl
  alias: Auto Renew SSL Cert
  trigger:
    platform: numeric_state
    entity_id: sensor.ssl_cert_expiry
    below: 30
  action:
    service: shell_command.renew_ssl
- id: ssl_expiry_notification
  alias: SSL expiry notification
  trigger:
    platform: numeric_state
    entity_id: sensor.ssl_cert_expiry
    below: 21
  action:
    service: notify.telegram_ben
    data:
      message: Warning - SSL certificate expires in 21 days and has not been automatically
        renewed
- alias: Start HomeKit
  trigger:
  - platform: event
    event_type: zwave.network_ready
  action:
  - service: homekit.start
  id: f8c1b72097264b11835a9b460b684a53
- alias: Turn off Hue Lights
  trigger:
  - platform: homeassistant
    event: start
  action:
  - service: homeassistant.turn_off
    data:
      entity_id: light.bedside_light
  - service: homeassistant.turn_off
    data:
      entity_id: light.reading_light
  id: 98131667ee0c455ea8a64da29ac27723
- id: office_light_on
  alias: Office Light is On
  trigger:
  - platform: state
    entity_id: light.office_level
    to: 'on'
    for:
      seconds: 2
  action:
  - service: notify.telegram_ben
    data:
      message: The office light is on.
      data:
        inline_keyboard:
        - Turn Off:/call_service homeassistant.turn_off light.office_level
        - Turn On:/call_service homeassistant.turn_on light.office_level
  initial_state: false
- id: garage_door_open
  alias: Garage Door is Open
  trigger:
  - platform: state
    entity_id: cover.garage_door_barrier_state
    to: open
    for:
      minutes: 30
  action:
  - service: notify.telegram_ben
    data:
      message: The garage door has been open for 30 minutes.
      data:
        inline_keyboard:
        - Close Garage:/call_service cover.close_cover cover.garage_door_barrier_state
- id: close_garage_door_at_night
  alias: Close Garage at Night
  trigger:
  - platform: state
    entity_id: cover.garage_door_barrier_state
    to: open
    for:
      minutes: 60
  condition:
  - condition: state
    entity_id: binary_sensor.nighttime
    state: 'on'
  action:
  - service: notify.telegram_ben
    data:
      message: It's nighttime and the garage door has been open for an hour.
      data:
        inline_keyboard:
        - Close Garage:/call_service cover.close_cover cover.garage_door_barrier_state
- id: telegram_call_service_callback
  alias: Telegram Call Service Callback
  trigger:
  - platform: event
    event_type: telegram_callback
  action:
  - service_template: '{% set data = trigger.event.data.data.split(" ") %} {{ data[1]
      }}

      '
    data_template:
      entity_id: '{% set data = trigger.event.data.data.split(" ") %} {{ data[2] }}

        '
- id: telegram_call_service_command
  alias: Telegram Call Service Command
  trigger:
  - platform: event
    event_type: telegram_command
    event_data:
      command: /call_service
  action:
  - service_template: '{{ trigger.event.data.args[0] }}'
    data_template:
      entity_id: '{{ trigger.event.data.args[1] }}'
